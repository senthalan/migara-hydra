FROM golang:1.19-alpine3.16 AS builder

RUN apk -U --no-cache --upgrade --latest add build-base git gcc bash

WORKDIR /go/src/github.com/ory/hydra
RUN mkdir -p ./internal/httpclient

COPY go.mod go.sum default.conf script.sh ./
COPY internal/httpclient/go.* ./internal/httpclient/

ENV GO111MODULE on
ENV CGO_ENABLED 1

RUN go mod download

COPY . .

RUN go build -tags sqlite,json1 -o /usr/bin/hydra

FROM nginx:stable-alpine

ARG USER_ID=10001
ARG USER_GROUP_ID=10001

#RUN addgroup -S ory; \
#    adduser -S ory -G ory -D  -h /home/ory -s /bin/nologin; \
#    chown -R ory:ory /home/ory

RUN addgroup -g ${USER_GROUP_ID} -S ory; \
    adduser -u ${USER_ID} -S ory -G ory -D  -h /home/ory -s /bin/nologin; \
    chown -R ory:ory /home/ory

COPY --from=builder /usr/bin/hydra /usr/bin/hydra
COPY default.conf /etc/nginx/conf.d/
COPY script.sh .

RUN chown -R ory:ory /var/cache/nginx && \
    chown -R ory:ory /var/log/nginx && \
    chown -R ory:ory /etc/nginx/conf.d && \
    chown -R ory:ory script.sh && \
    chmod +x script.sh
RUN touch /var/run/nginx.pid && \
    chown -R ory:ory /var/run/nginx.pid

# By creating the sqlite folder as the ory user, the mounted volume will be owned by ory:ory, which
# is required for read/write of SQLite.
RUN mkdir -p /var/lib/sqlite && \
    chown ory:ory /var/lib/sqlite

VOLUME /var/lib/sqlite

# Exposing the ory home directory
VOLUME /home/ory

# Declare the standard ports used by hydra (4444 for public service endpoint, 4445 for admin service endpoint)
EXPOSE 80 4444 4445

USER ory
CMD sh script.sh